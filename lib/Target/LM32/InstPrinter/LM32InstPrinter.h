//=== LM32InstPrinter.h - Convert LM32 MCInst to assembly syntax -*- C++ -*-==//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints a LM32 MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_LM32_INSTPRINTER_LM32INSTPRINTER_H
#define LLVM_LIB_TARGET_LM32_INSTPRINTER_LM32INSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"
#include "llvm/Support/Compiler.h"

namespace llvm {

class TargetMachine;

class LM32InstPrinter final : public MCInstPrinter {
public:
  LM32InstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                  const MCRegisterInfo &MRI)
    : MCInstPrinter(MAI, MII, MRI) {}

  /// printInst - Print the specified MCInst to the specified raw_ostream.
  void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot) override;

  /// printRegName - Print the assembler register name.
  void printRegName(raw_ostream &OS, unsigned RegNo) const override;

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, raw_ostream &O);

  // Autogenerated by tblgen.
  static const char *getRegisterName(unsigned RegNo);

  // Autogenerated by tblgen, returns true if we successfully printed an
  // alias.
  bool printAliasInstr(const MCInst *MI, raw_ostream &OS);

  // Autogenerated by tblgen.
  void printCustomAliasOperand(const MCInst *MI, unsigned OpIdx,
                               unsigned PrintMethodIdx, raw_ostream &O);
    
  // printMethods referenced in LM32InstrInfo.td
  void printSymbolHi(const MCInst *MI, unsigned OpNo, raw_ostream &O) const
    { printSymbol(MI, OpNo, O, true); }
  void printSymbolLo(const MCInst *MI, unsigned OpNo, raw_ostream &O) const
    { printSymbol(MI, OpNo, O, false); }
  void printS16ImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printUnsignedImm(const MCInst *MI, int opNum, raw_ostream &O);
  void printMemOperand(const MCInst *MI, int opNum, raw_ostream &O);



private:
  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;
  void printImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;
  void printSymbol(const MCInst *MI, unsigned OpNo, raw_ostream &O, bool hi) const;

//  void printUnsignedImm8(const MCInst *MI, int opNum, raw_ostream &O);
//  void printMemOperandEA(const MCInst *MI, int opNum, raw_ostream &O);
//  void printFCCOperand(const MCInst *MI, int opNum, raw_ostream &O);
//  void printSHFMask(const MCInst *MI, int opNum, raw_ostream &O);

//  bool printAlias(const char *Str, const MCInst &MI, unsigned OpNo,
//                  raw_ostream &OS);
//  bool printAlias(const char *Str, const MCInst &MI, unsigned OpNo0,
//                  unsigned OpNo1, raw_ostream &OS);
//  bool printAlias(const MCInst &MI, raw_ostream &OS);
//  void printSaveRestore(const MCInst *MI, raw_ostream &O);

};
} // end namespace llvm

#endif  //LLVM_LIB_TARGET_LM32_INSTPRINTER_LM32INSTPRINTER_H
